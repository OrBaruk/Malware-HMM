from scipy.stats.kde import gaussian_kde
from scipy.stats import norm
from numpy import linspace,hstack
import 
# from pylab import plot,show,hist

values = [(9,4),(10,3),(12,9),(22,1),(31,1),(33,1),(34,3),(35,2),(36,1),(45,1),
(49,3),(52,1),(53,1),(54,1),(58,5),(60,3),(62,1),(64,1),(68,1),(70,1),(71,1),
(72,4),(73,2),(74,4),(76,2),(78,1),(81,1),(88,1),(90,1),(92,1),(93,1),(94,1),
(101,3),(102,1),(106,1),(108,1),(110,1),(112,1),(119,1),(121,1),(124,1),(130,1),
(131,1),(132,1),(151,1),(157,1),(158,1),(159,1),(160,1),(171,1),(173,1),(177,2),
(187,1),(188,2),(198,1),(200,1),(219,1),(227,1),(229,1),(231,1),(242,1),(245,1),
(246,1),(250,1),(253,1),(262,1),(285,1),(289,1),(320,1),(327,1),(330,1),(331,1),
(339,2),(341,1),(354,1),(357,1),(358,1),(370,1),(371,2),(389,1),(391,1),(397,1),
(416,1),(429,1),(431,1),(455,1),(464,1),(465,1),(484,1),(488,1),(493,1),(494,1),
(530,1),(544,1),(547,1),(550,1),(555,1),(556,1),(561,1),(566,1),(583,1),(601,1),
(604,1),(606,1),(614,1),(627,1),(635,1),(650,1),(654,1),(661,1),(683,1),(691,1),
(713,1),(715,1),(730,1),(733,1),(747,1),(753,1),(787,1),(792,2),(803,1),(820,1),
(823,1),(825,1),(845,1),(864,1),(874,1),(879,1),(882,2),(900,1),(935,1),(946,2),
(957,1),(961,1),(1036,1),(1040,1),(1054,1),(1055,1),(1064,1),(1083,1),(1089,2),
(1104,1),(1138,1),(1154,1),(1172,1),(1195,1),(1198,1),(1208,1),(1213,1),(1288,1),
(1302,1),(1325,1),(1359,1),(1365,1),(1366,1),(1375,1),(1382,1),(1394,1),(1411,1),
(1418,1),(1419,1),(1431,1),(1436,1),(1437,1),(1444,1),(1446,1),(1452,1),(1470,2),
(1477,1),(1484,1),(1508,1),(1509,1),(1520,1),(1524,1),(1544,1),(1548,1),(1569,1),
(1577,1),(1578,1),(1585,1),(1587,2),(1589,1),(1592,1),(1640,1),(1642,1),(1814,1)]

raw = []

for v in values:
	for x in range(0,v[1]):
		raw.append(v[0])


# def main():
# creating data with two peaks
sampD1 = norm.rvs(loc=-1.0,scale=1,size=300)
sampD2 = norm.rvs(loc=2.0,scale=0.5,size=300)
samp = hstack([sampD1,sampD2])

# obtaining the pdf (my_pdf is a function!)
my_pdf = gaussian_kde(samp)

# plotting the result
x = linspace(-5,5,100)
# plot(x,my_pdf(x),'r') # distribution function
# hist(samp,normed=1,alpha=.3) # histogram
# show()

# if __name__ == '__main__':
# 	main()
