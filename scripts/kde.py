from scipy.stats.kde import gaussian_kde
from scipy.stats import norm
from numpy import linspace,hstack
import matplotlib.pyplot as mp
import sys
import ast

def main():
	if len(sys.argv) != 2:
		print("Usage: python3 kde.py [hist_list]")
		return

	try:
		f = open(sys.argv[1])
	except FileNotFound:
		print('Error: File no found.')
		return

	for l in f:
		print(l)
		sp = l.split()
		fp = sp[0]
		name = sp[1]
		print(fp)
		print(name)

		val = ast.literal_eval(open(fp).read())

		raw = []
		for v in val:
			for x in range(0,v[1]):
				raw.append(v[0])

		plot_kde(raw, name)
		plot_hist(raw, name)

	return

def plot_kde(val, name):
	gkde = gaussian_kde(val)
	size = val[len(val) - 1]
	x = linspace(0,size,size*2)

	mp.title(name)
	# distribution function
	h = mp.plot(x,gkde(x),'r', label='Kernel Density Estimation') 
	
	mp.hist(val,normed=1,alpha=.15, ) # histogram

	mp.xlabel('Sequence length')
	mp.ylabel('Probability density')

	# mp.show()
	mp.savefig('kde-'+name+'.png')
	mp.clf()
	return

def plot_hist(val, name):
	mp.title(name)
	mp.hist(val,normed=1,alpha=.15, ) # histogram
	
	mp.xlabel('Sequence length')
	mp.ylabel('Probability density')

	# mp.show()
	mp.savefig('hist-'+name+'.png')
	mp.clf()
	return

if __name__ == '__main__':
	main()
