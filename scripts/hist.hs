import Data.List.Split
import Data.List
import qualified Data.Map as Map
import System.Environment
import System.FilePath
import Graphics.Gnuplot.Simple
import Data.List.Split
import System.Environment
import System.FilePath

main :: IO()
main = getArgs >>= parseArgs [] >>= putStrLn . show . Map.assocs . histogram

parseArgs :: [Int] -> [String] -> IO([Int])
parseArgs l (h:t) = countLines h >>= \x-> parseArgs  (x:l) t
parseArgs l [] = return (l)

countLines :: FilePath -> IO(Int)
countLines fp =  readFile fp >>= return .length . lines 

histogram :: Ord a => [a] -> Map.Map a Int
histogram xs = Map.fromList [ (head l, length l) | l <- group (sort xs) ]
